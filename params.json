{"google":"","tagline":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"warsztat-game-demo\r\n==================\r\n\r\nPróbna implementacja pomysłu na Warsztat game z użyciem następujących technologii:\r\n- JavaScript\r\n- Websockets\r\n- CSS3\r\n- Java\r\n* Java-WebSocket: https://github.com/TooTallNate/Java-WebSocket\r\n* Jetty 7.6.7: http://download.eclipse.org/jetty/\r\n- Dojo Toolkit 1.7\r\n\r\nCelem jest zaprezentowanie możliwości technicznych rozwiązania, które polega na tym, że jeden z graczy będzie pełnił funkcję autorytatywnego serwera dla pozostałych graczy.\r\n\r\n= Architektura =\r\n\r\nProsty programik napisany w Javie serwuje pliki statyczne, a także wymienia informacje pomiędzy klientami.\r\n\r\nSerwer socketów nadaje klientom identyfikatory, a także decyduje o tym, który z klientów jest hostem gry.\r\n\r\nHost gry wysyła do klientów snapshot stanu gry, w którym znajdują się informacje o graczach, informacje o obiektach, planszy, punktacja i log z przebiegu rozgrywki.\r\n\r\nKlient na bazie ostatniego snapshotu prowadzi włąsną symulację gry, ale po otrzymaniu nowego snapshota w pełni dostosowuje stan gry po stronie klienta do tego po stronie serwera.\r\n\r\nPomysły:\r\n- sumy kontrolne snapshotów\r\n- synchronizacja czasu pomiędzy klientami\r\n\r\n= Gameplay =\r\n\r\nGra to najprostszy pong dla wielu graczy. Gra toczy się wewnątrz wielokąta:\r\n- prostokąt dla dwóch graczy\r\n- trójkąt dla trzech\r\n- prostokąt dla czterech\r\n- pięciokąt dla pięciu\r\n- sześciokąt dla sześci itd.\r\n\r\nCelem gracza jest nieprzepuszczanie piłki przez swój bok.\r\n\r\n= Jak uruchomić w Eclipse =\r\n1. Pobierz źródła\r\n2. Dodaj do User Libraries Jetty 7.6.7\r\n3. Dodaj bibliotekę Jetty do build path\r\n4. Uruchom klasę ProxyServer\r\n5. W przeglądarce otwórz adres: http://localhost:1750\r\n\r\nOpcjonalne parametry ProxyServer to:\r\n[hostname] [socketport] [httpport]\r\n\r\nDomyślne wartości: localhost 10123 1750","name":"Warsztat-game-demo"}